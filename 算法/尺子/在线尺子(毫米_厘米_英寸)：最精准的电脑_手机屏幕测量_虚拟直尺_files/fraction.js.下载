function gcd(m ,n){if(n) return gcd(n ,m%n);return m;}

function Decimal2Fraction(d,fractions=36){
  var d2=Math.floor(d);
  numerator=Math.round((d-d2)/(1/fractions));
  denominator=fractions;
  g=gcd(numerator,denominator);
  while (g>1){
    numerator/=g;denominator/=g;
    g=gcd(numerator,denominator);
  }
  if(numerator==1 && denominator==1){d2+=1;numerator=0;}
  if(d2>0){sTemp=d2;} else {sTemp='';}
  if(numerator>0){if(d2>0){sTemp+=' ';}sTemp+=numerator + '/' + denominator;}
  return sTemp.toString();
}

function Fraction2Decimal(mix_frac){
//proper fraction to decimal
function PF2D(frac){
  var f=frac.split('/');
  if (f.length==1){ return parseInt(frac);
  } else if (f.length==2){
    numerator=f[0];
    denominator=f[1];
    if ((numerator!='') && (denominator!='') && parseInt(denominator)>0 && parseInt(numerator)>0 ){
      return numerator/denominator;
    }
  }
  return 0;
}
//mixed fraction
mix_frac=mix_frac.trim().replace(/\s{2,}/g,' ');
var mf=mix_frac.split(' ');
var f2=0;
if (mf.length==2){
  if (mf[1].indexOf('/')!=-1){f2=PF2D(mf[1]);}
}
var f1=PF2D(mf[0]);
return parseFloat(f1)+parseFloat(f2);
}